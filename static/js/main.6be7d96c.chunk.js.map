{"version":3,"sources":["components/Upload.jsx","components/Welcome.jsx","components/Modal.jsx","components/Social.jsx","components/Question.jsx","components/Result.jsx","components/Game.jsx","components/Error.jsx","components/App.jsx","index.js"],"names":["Upload","handleUpload","fetchData","setModal","useState","api","setApi","useEffect","className","htmlFor","id","type","name","onChange","onClick","placeholder","value","e","target","Welcome","highScore","clearHighScore","quickStart","showUpload","setShowUpload","buttons","Modal","sampleData","JSON","stringify","undefined","stopPropagation","Social","href","Question","currentQuestion","choices","increment","selectedAnswer","setSelectedAnswer","submitted","setSubmitted","handleClick","innerText","nextButton","style","visibility","preventDefault","correct","question","map","choice","idx","Result","score","resetGame","setTriviaData","setHighScore","localStorage","message","allTimeHigh","Math","max","Game","triviaData","randomizeArray","questionArray","n","questions","Array","len","length","taken","x","floor","random","counter","setCounter","setScore","actualQuestions","incorrect","concat","randomChoices","item","Error","errors","error","App","modal","setErrors","checkJSON","sampleQuestion","every","onReaderLoad","parse","result","defaultData","reader","FileReader","onload","files","readAsText","fileType","split","toUpperCase","link","fetch","then","res","json","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6be7d96c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport default function Upload({ handleUpload, fetchData, setModal }) {\n  const [api, setApi] = useState(\"\");\n\n  useEffect(() => {\n    setModal(true)\n  }, [setModal])\n\n  return (\n    <div className=\"upload-page\">\n      <div className=\"welcome-buttons\">\n        <label\n          className=\"welcome-button\"\n          htmlFor=\"file\"\n        > Upload JSON File\n            <input\n            className=\"upload\"\n            id=\"file\"\n            type=\"file\"\n            name=\"file\"\n            onChange={handleUpload}\n          />\n        </label>\n\n        <div\n          className=\"welcome-button\"\n          onClick={() => fetchData(api)}\n        >\n          <input\n            className=\"api\"\n            type=\"text\"\n            placeholder=\"Paste JSON API link here\"\n            value={api}\n            onChange={e => setApi(e.target.value)} />\n\n          </div>\n\n        <div className=\"welcome-button\" onClick={() => setModal(true)}>\n          See Sample State\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport Upload from './Upload';\n\nexport default function Welcome({ \n  highScore, \n  clearHighScore, \n  quickStart, \n  handleUpload, \n  fetchData, \n  setModal,\n}) {\n  const [showUpload, setShowUpload] = useState(false);\n\n  const buttons = (\n    <div className=\"welcome-buttons\">\n      <div\n        className=\"welcome-button\"\n        onClick={quickStart}\n      >Quickstart</div>\n\n      <div\n        className=\"welcome-button\"\n        onClick={() => setShowUpload(true)}\n      >Use my own file</div>\n\n      {/* <label\n          className=\"welcome-button\"\n          htmlFor=\"file\"\n        > Upload JSON File\n          <input\n            className=\"upload\"\n            id=\"file\"\n            type=\"file\"\n            name=\"file\"\n            onChange={handleUpload}\n          />\n        </label>\n\n        <div\n          className=\"welcome-button\"\n          onClick={() => fetchData(apiLink)}\n        >\n          <input\n            className=\"api\"\n            type=\"text\"\n            placeholder=\"Paste JSON API link here\"\n            value={apiLink}\n            onChange={e => setApiLink(e.target.value)} />\n          Fetch from API\n        </div> */}\n    </div>\n  )\n\n  return (\n    <div className=\"welcome\">\n      <div className=\"welcome-high\">\n        {`High Score: ${highScore}`}\n        <div\n          className=\"welcome-high-button\"\n          onClick={clearHighScore}>Clear High Score</div>\n      </div>\n      <h1>Darrick's Trivia Game!</h1>\n      {showUpload ? \n        <Upload \n          handleUpload={handleUpload} \n          fetchData={fetchData}\n          setModal={setModal}\n        /> : \n        buttons}\n    </div>\n  )\n}","import React from 'react';\n\nexport default function Modal({ setModal }) {\n  \n  const data = {\n    \"question\": \"What is 1+1?\",\n    \"correct\": \"2\",\n    \"incorrect\": [\"3\", \"4\", \"5\"],\n  }\n\n  const sampleData = (\n    <pre className=\"sample-state\">\n      Use a file with this sample state: \n      <br></br>\n      <br></br>\n      {JSON.stringify(data, undefined, 2)}\n    </pre>\n  )\n\n  return (\n    <div className=\"modal-background\" onClick={() => setModal(false)}>\n      <div className=\"modal-child\" onClick={(e) => e.stopPropagation()}>\n        {sampleData}\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { FaLinkedin, FaGithubAlt, FaAngellist } from \"react-icons/fa\";\n\nexport default function Social() {\n  return (\n    <div className=\"social\">\n      <a href=\"https://www.linkedin.com/in/darrick-yong/\">\n        <FaLinkedin className=\"linkedin\" />\n      </a>\n\n      <a href=\"https://github.com/darrickyong\">\n        <FaGithubAlt className=\"github\" />\n      </a>\n\n      <a href=\"https://angel.co/u/darrick-yong\">\n        <FaAngellist className=\"angel\" />\n      </a>\n    </div>\n  )\n}","import React, { useState } from \"react\";\n\nfunction Question({currentQuestion, choices, increment}) {\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  \n  const handleNext = e => {\n    e.preventDefault();\n    if (selectedAnswer === currentQuestion.correct) {\n      increment(\"score\")\n    }\n    increment(\"counter\");\n    setSelectedAnswer(\"\");\n    setSubmitted(!submitted);\n  }\n  \n  const handleClick = e => {\n    if (!submitted) {\n      setSubmitted(!submitted);\n      setSelectedAnswer(e.target.innerText)\n    };\n  }\n\n  const nextButton = (\n    <div\n      className=\"question-next\"\n      style={{visibility: submitted ? \"visible\" : \"hidden\"}} \n      onClick={handleNext}\n    >Next</div>\n  )\n\n  return (\n    <div className=\"question\">\n      {currentQuestion.question}\n      {choices.map( (choice, idx) => {\n        return (\n          <div \n            key={idx}\n            className={\n              submitted && choice === currentQuestion.correct ? \"question-choice correct\" : \n              submitted && choice === selectedAnswer ? \"question-choice incorrect\" : \"question-choice\"}\n            onClick={handleClick}\n          >\n          {choice}</div>\n        )\n      })}\n      {nextButton}\n    </div>\n    \n  )\n}\n\nexport default Question;","import React from \"react\";\n\nfunction Result({score, resetGame, setTriviaData, highScore, setHighScore}) {\n  if (!localStorage.highScore || score > localStorage.highScore) {\n    localStorage.highScore = score;\n  }\n\n  const allTimeHigh = Math.max(highScore, localStorage.highScore);\n\n  const startOver = () => {\n    setHighScore(allTimeHigh);\n    setTriviaData([]);\n  }\n\n  let message;\n  switch(true) {\n    case (score < 3):\n      message = \"Yikes...\"\n      break;\n    case (score < 7):\n      message = \"You can do better...\"\n      break;\n    case (score < 10):\n      message = \"Almost there...\"\n      break;\n    default:\n      message = \"Perfect score!\"\n      break;\n  }\n\n  return (\n    <div className=\"result\">\n      <div className=\"score\">\n        {`High Score: ${allTimeHigh}`}\n      </div>\n      <div className=\"score\">\n        {`You scored ${score} out of 10. ${message}`}\n      </div>\n\n      <div className=\"result-buttons\">\n        <div className=\"result-button\" onClick={resetGame}>Retry with same questions</div>\n        <div className=\"result-button\" onClick={startOver}>Start Over</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Result;","import React, { useState } from \"react\";\nimport Question from \"./Question\";\nimport Result from \"./Result\";\n\nfunction Game({triviaData, setTriviaData, highScore, setHighScore}) {\n  \n  const randomizeArray = (questionArray, n) => {\n    let questions = new Array(n),\n          len = questionArray.length,\n          taken = new Array(len);\n    while (n--) {\n      let x = Math.floor(Math.random() * len);\n      questions[n] = questionArray[x in taken ? taken[x]: x];\n      taken[x] = --len in taken ? taken[len] : len;\n    }\n    return questions;\n  }\n\n  const [counter, setCounter] = useState(0);\n  const [score, setScore] = useState(0);\n  const [actualQuestions, setActualQuestions] = useState(randomizeArray(triviaData, 10));\n\n  const currentQuestion = actualQuestions[counter];\n  const choices = currentQuestion ? currentQuestion.incorrect.concat(currentQuestion.correct) : null;\n  const randomChoices = currentQuestion ? randomizeArray(choices, 4): null;\n\n  const increment = item => {\n    if (item === \"score\") {\n      setScore(score + 1)\n    } else if (item === \"counter\") {\n      setCounter(counter + 1)\n    }\n  }\n\n  const resetGame = () => {\n    setCounter(0);\n    setScore(0);\n  }\n\n  return (\n    currentQuestion ? (\n      <div className=\"game\">        \n        <div\n          className=\"game-counter\"\n        >{`Question ${counter + 1} of 10`}</div>\n\n        <Question \n          currentQuestion={currentQuestion}\n          choices={randomChoices}\n          increment={increment}\n        /> \n      </div>\n    )\n    : <Result \n        score={score}\n        highScore={highScore}\n        setHighScore={setHighScore}\n        resetGame={resetGame}\n        setTriviaData={setTriviaData}\n      />\n  )\n}\n\nexport default Game;","import React from \"react\";\n\nfunction Error({errors}) {\n  return (\n    <div \n      className=\"errors\"\n      style={{visibility: errors.length ? \"visible\" : \"hidden\"}}>\n      {errors.map((error, idx) => {\n        return (\n          <div key={idx}>\n            {error}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Error;","import React, { useState } from \"react\";\nimport Welcome from './Welcome';\nimport Modal from './Modal';\nimport Social from './Social';\nimport Game from \"./Game\";\nimport Error from \"./Error\";\nimport defaultData from \"../db.json\";\n\nfunction App() {\n  const [modal, setModal] = useState(false);\n  const [triviaData, setTriviaData] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [highScore, setHighScore] = useState(localStorage.highScore || 0);\n\n  const checkJSON = sampleQuestion => {\n    if (!(sampleQuestion instanceof Array)) return false;\n    let question = typeof sampleQuestion.question == \"string\";\n    let correct = typeof sampleQuestion.correct == \"string\";\n    let incorrect = sampleQuestion.incorrect.every( choice => typeof choice == \"string\") && sampleQuestion.incorrect.length === 3;\n    return question && correct && incorrect;\n  }  \n\n  const handleUpload = e => {\n    let reader = new FileReader();\n    reader.onload = onReaderLoad;\n    if (e.target.files[0].type !== \"application/json\") {\n      const fileType = e.target.files[0].type.split(\"/\")[1].toUpperCase();\n      setErrors([`You uploaded a ${fileType} file. Please upload a JSON file instead.`])\n      return;\n    }\n    reader.readAsText(e.target.files[0]);\n  }\n  \n  const onReaderLoad = e => {\n    const triviaData = JSON.parse(e.target.result);\n    if (checkJSON(triviaData[0])) {\n      setErrors([]);\n      setTriviaData(triviaData);\n    } else {\n      setErrors([\"Please check that the JSON format is correct.\"])\n    }\n  }\n\n  const fetchData = link => {\n    if(link.length) {\n      fetch(link)\n        .then(res => res.json())\n        .then(data => {\n          if (checkJSON(data[0])) {\n            setErrors([]);\n            setTriviaData(data);\n          } else {\n            setErrors([\"Please check that the JSON format is correct.\"])\n          }\n        })\n    }\n  }\n\n  const quickStart = e => {\n    setTriviaData(defaultData);\n  }\n\n  const clearHighScore = () => {\n    setHighScore(0);\n    localStorage.highScore = 0;\n  }\n\n  return (\n    <div>\n      {modal ? <Modal setModal={setModal}/> : null}\n      <div className=\"app\">\n        <Social />\n        {triviaData.length ?  \n          <Game \n            triviaData={triviaData} \n            setTriviaData={setTriviaData}\n            highScore={highScore}\n            setHighScore={setHighScore}\n          /> :\n          <Welcome \n            highScore={highScore}\n            clearHighScore={clearHighScore}\n            quickStart={quickStart}\n            handleUpload={handleUpload}\n            fetchData={fetchData}\n            setModal={setModal}\n          />}\n        <Error errors={errors} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}