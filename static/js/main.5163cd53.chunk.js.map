{"version":3,"sources":["components/Question.jsx","components/Result.jsx","components/Game.jsx","components/Error.jsx","components/App.jsx","index.js"],"names":["Question","currentQuestion","choices","increment","useState","selectedAnswer","setSelectedAnswer","submitted","setSubmitted","handleClick","e","target","innerText","nextButton","className","style","visibility","onClick","preventDefault","correct","question","map","choice","idx","Result","score","resetGame","setTriviaData","highScore","setHighScore","localStorage","message","allTimeHigh","Math","max","Game","triviaData","randomizeArray","questionArray","n","questions","Array","len","length","taken","x","floor","random","counter","setCounter","setScore","actualQuestions","incorrect","concat","randomChoices","item","Error","errors","error","App","apiLink","setApiLink","setErrors","checkJSON","sampleQuestion","every","onReaderLoad","JSON","parse","result","welcome","defaultData","htmlFor","id","type","name","onChange","reader","FileReader","onload","files","readAsText","fileType","split","toUpperCase","link","fetch","then","res","json","data","placeholder","value","socialMedia","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5163cd53.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Question({currentQuestion, choices, increment}) {\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  \n  const handleNext = e => {\n    e.preventDefault();\n    if (selectedAnswer === currentQuestion.correct) {\n      increment(\"score\")\n    }\n    increment(\"counter\");\n    setSelectedAnswer(\"\");\n    setSubmitted(!submitted);\n  }\n  \n  const handleClick = e => {\n    if (!submitted) {\n      setSubmitted(!submitted);\n      setSelectedAnswer(e.target.innerText)\n    };\n  }\n\n  const nextButton = (\n    <div\n      className=\"question-next\"\n      style={{visibility: submitted ? \"visible\" : \"hidden\"}} \n      onClick={handleNext}\n    >Next</div>\n  )\n\n  return (\n    <div className=\"question\">\n      {currentQuestion.question}\n      {choices.map( (choice, idx) => {\n        return (\n          <div \n            key={idx}\n            className={\n              submitted && choice === currentQuestion.correct ? \"question-choice correct\" : \n              submitted && choice === selectedAnswer ? \"question-choice incorrect\" : \"question-choice\"}\n            onClick={handleClick}\n          >\n          {choice}</div>\n        )\n      })}\n      {nextButton}\n    </div>\n    \n  )\n}\n\nexport default Question;","import React from \"react\";\n\nfunction Result({score, resetGame, setTriviaData, highScore, setHighScore}) {\n  if (!localStorage.highScore || score > localStorage.highScore) {\n    localStorage.highScore = score;\n  }\n\n  const allTimeHigh = Math.max(highScore, localStorage.highScore);\n\n  const startOver = () => {\n    setHighScore(allTimeHigh);\n    setTriviaData([]);\n  }\n\n  let message;\n  switch(true) {\n    case (score < 3):\n      message = \"Yikes...\"\n      break;\n    case (score < 7):\n      message = \"You can do better...\"\n      break;\n    case (score < 10):\n      message = \"Almost there...\"\n      break;\n    default:\n      message = \"Perfect score!\"\n      break;\n  }\n\n  return (\n    <div className=\"result\">\n      <div className=\"score\">\n        {`High Score: ${allTimeHigh}`}\n      </div>\n      <div className=\"score\">\n        {`You scored ${score} out of 10. ${message}`}\n      </div>\n\n      <div className=\"result-buttons\">\n        <div className=\"result-button\" onClick={resetGame}>Retry with same questions</div>\n        <div className=\"result-button\" onClick={startOver}>Start Over</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Result;","import React, { useState } from \"react\";\nimport Question from \"./Question\";\nimport Result from \"./Result\";\n\nfunction Game({triviaData, setTriviaData, highScore, setHighScore}) {\n  \n  const randomizeArray = (questionArray, n) => {\n    let questions = new Array(n),\n          len = questionArray.length,\n          taken = new Array(len);\n    while (n--) {\n      let x = Math.floor(Math.random() * len);\n      questions[n] = questionArray[x in taken ? taken[x]: x];\n      taken[x] = --len in taken ? taken[len] : len;\n    }\n    return questions;\n  }\n\n  const [counter, setCounter] = useState(0);\n  const [score, setScore] = useState(0);\n  const [actualQuestions, setActualQuestions] = useState(randomizeArray(triviaData, 10));\n\n  const currentQuestion = actualQuestions[counter];\n  const choices = currentQuestion ? currentQuestion.incorrect.concat(currentQuestion.correct) : null;\n  const randomChoices = currentQuestion ? randomizeArray(choices, 4): null;\n\n  const increment = item => {\n    if (item === \"score\") {\n      setScore(score + 1)\n    } else if (item === \"counter\") {\n      setCounter(counter + 1)\n    }\n  }\n\n  const resetGame = () => {\n    setCounter(0);\n    setScore(0);\n  }\n\n  return (\n    currentQuestion ? (\n      <div className=\"game\">        \n        <div\n          className=\"game-counter\"\n        >{`Question ${counter + 1} of 10`}</div>\n\n        <Question \n          currentQuestion={currentQuestion}\n          choices={randomChoices}\n          increment={increment}\n        /> \n      </div>\n    )\n    : <Result \n        score={score}\n        highScore={highScore}\n        setHighScore={setHighScore}\n        resetGame={resetGame}\n        setTriviaData={setTriviaData}\n      />\n  )\n}\n\nexport default Game;","import React from \"react\";\n\nfunction Error({errors}) {\n  return (\n    <div \n      className=\"errors\"\n      style={{visibility: errors.length ? \"visible\" : \"hidden\"}}>\n      {errors.map((error, idx) => {\n        return (\n          <div key={idx}>\n            {error}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Error;","import React, { useState } from \"react\";\nimport { FaLinkedin, FaGithubAlt, FaAngellist } from \"react-icons/fa\";\nimport Game from \"./Game\";\nimport Error from \"./Error\";\nimport defaultData from \"../db.json\";\n\nfunction App() {\n  const [apiLink, setApiLink] = useState(\"\");\n  const [triviaData, setTriviaData] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [highScore, setHighScore] = useState(localStorage.highScore || 0);\n\n  const checkJSON = sampleQuestion => {\n    if (!(sampleQuestion instanceof Array)) return false;\n    let question = typeof sampleQuestion.question == \"string\";\n    let correct = typeof sampleQuestion.correct == \"string\";\n    let incorrect = sampleQuestion.incorrect.every( choice => typeof choice == \"string\") && sampleQuestion.incorrect.length === 3;\n    return question && correct && incorrect;\n  }  \n\n  const handleUpload = e => {\n    let reader = new FileReader();\n    reader.onload = onReaderLoad;\n    if (e.target.files[0].type !== \"application/json\") {\n      const fileType = e.target.files[0].type.split(\"/\")[1].toUpperCase();\n      setErrors([`You uploaded a ${fileType} file. Please upload a JSON file instead.`])\n      return;\n    }\n    reader.readAsText(e.target.files[0]);\n  }\n  \n  const onReaderLoad = e => {\n    const triviaData = JSON.parse(e.target.result);\n    if (checkJSON(triviaData[0])) {\n      setErrors([]);\n      setTriviaData(triviaData);\n    } else {\n      setErrors([\"Please check that the JSON format is correct.\"])\n    }\n  }\n\n  const fetchData = link => {\n    if(link.length) {\n      fetch(link)\n        .then(res => res.json())\n        .then(data => {\n          if (checkJSON(data[0])) {\n            setErrors([]);\n            setTriviaData(data);\n          } else {\n            setErrors([\"Please check that the JSON format is correct.\"])\n          }\n        })\n    }\n  }\n\n  const quickStart = e => {\n    setTriviaData(defaultData);\n  }\n\n  const clearHighScore = () => {\n    setHighScore(0);\n    localStorage.highScore = 0;\n  }\n\n  const welcome = (\n    <div className=\"welcome\">\n      <div className=\"welcome-high\">\n        {`High Score: ${highScore}`}\n        <div\n          className=\"welcome-high-button\"\n          onClick={clearHighScore}>Clear High Score</div>\n      </div>\n      <h1>Darrick's Trivia Game!</h1>\n      <div className=\"welcome-buttons\">\n        <div\n          className=\"welcome-button\" \n          onClick={quickStart}\n        >Quickstart</div>\n\n        <label \n          className=\"welcome-button\"\n          htmlFor=\"file\"\n        > Upload JSON File \n          <input \n            className=\"upload\"\n            id=\"file\"\n            type=\"file\" \n            name=\"file\"\n            onChange={handleUpload}\n          />\n        </label>\n\n        <div \n          className=\"welcome-button\"\n          onClick={() => fetchData(apiLink)}\n        >\n          <input\n            className=\"api\" \n            type=\"text\"\n            placeholder=\"Paste JSON API link here\"\n            value={apiLink}\n            onChange={e => setApiLink(e.target.value)}/>\n          Fetch from API\n        </div>\n      </div>\n    </div>\n  )\n\n  const socialMedia = (\n    <div className=\"social\">\n      <a href=\"https://www.linkedin.com/in/darrick-yong/\">\n        <FaLinkedin className=\"linkedin\" />\n      </a>\n\n      <a href=\"https://github.com/darrickyong\">\n        <FaGithubAlt className=\"github\" />\n      </a>\n\n      <a href=\"https://angel.co/u/darrick-yong\">\n        <FaAngellist className=\"angel\" />\n      </a>\n    </div>\n  )\n\n  return (\n    <div className=\"app\">\n      {socialMedia}\n      {triviaData.length ?  \n        <Game \n          triviaData={triviaData} \n          setTriviaData={setTriviaData}\n          highScore={highScore}\n          setHighScore={setHighScore}\n        /> :\n        welcome}\n      <Error errors={errors} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}